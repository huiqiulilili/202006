/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head == null) {
            return null;
        }
        ListNode fast = head;
        ListNode slow = head;

        do{
            fast = fast.next;
            if(fast == null) {
                break;
            }else {
                slow = slow.next;
                fast = fast.next;
            }
        }while(fast != null && fast != slow);

        if(fast == null) {
            return null;
        }

        ListNode p1 = head;
        ListNode p2 = slow;
        while(p1 != p2) {
            p1 = p1.next;
            p2 = p2.next;
        }
        return p1;
    }
}
