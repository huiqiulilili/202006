/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null ) {
            return false;
        }
        ListNode fast = head;
        ListNode slow = head;

        do {
            fast = fast.next;
            if(fast == null) {
                break;
            }else {
                slow = slow.next;
                fast = fast.next;
            }
        }while((fast != null && fast != slow));
        if(fast == null) {
            return false;
        }
        return true;
    }
   
}
