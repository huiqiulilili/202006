import java.util.*;

/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Partition {
    public ListNode partition(ListNode pHead, int x) {
       // small 是小于 x 的链表
		// big 是大于等于 x 的链表
		ListNode small = null;
		ListNode smallLast = null;
		
		ListNode big = null;
		ListNode bigLast = null;
		
		// cur = cur.next 的目的是让 cur 指向 cur 原来的下一个结点
		for (ListNode cur = pHead; cur != null; cur = cur.next) {
			if (cur.val < x) {
				if (small == null) {
					small = cur;
				} else {
					smallLast.next = cur;
				}
				smallLast = cur;
			} else {
				if (big == null) {
					big = cur;
				} else {
					bigLast.next = cur;
				}
				bigLast = cur;
			}
		}
		
		// 容易忘的点：需要保证链表的最后一个结点的 next == null
		
		if (small == null) {
			return big;
		} else {
			smallLast.next = big;
			if (bigLast != null) {
				bigLast.next = null;
			}
			return small;
		}
        
    }
}
